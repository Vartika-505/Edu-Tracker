import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Navbar from './Navbar';
import { useNavigate } from 'react-router-dom';

const Timetable = ({ token, username, handleLogout }) => {
  const navigate = useNavigate();
  const [tasks, setTasks] = useState([]);
  const [clickedDate, setClickedDate] = useState('');
  const [filteredTasks, setFilteredTasks] = useState([]);

  // Fetch tasks when the component mounts
  useEffect(() => {
    const fetchTasks = async () => {
      try {
        const userId = localStorage.getItem('userId');
        if (!userId) navigate('/login');
        if (!token) navigate('/home');

        const response = await axios.get(`http://localhost:5000/api/tasks/${userId}`);
        setTasks(response.data);
      } catch (error) {
        console.error("Error fetching tasks", error);
      }
    };
    fetchTasks();
  }, [navigate, token]);

  const formatDeadline = (date) => {
    const d = new Date(date);
    if (isNaN(d.getTime())) return '';
    const day = String(d.getDate()).padStart(2, '0');
    const month = String(d.getMonth() + 1).padStart(2, '0');
    const year = d.getFullYear();
    return `${day}/${month}/${year}`;
  };

  const handleDateClick = (date) => {
    setClickedDate(date);
    const filtered = tasks.filter(task => formatDeadline(task.deadline) === date);
    setFilteredTasks(filtered);
  };

  return (
    <div className="min-h-screen bg-gradient-to-r from-purple-400 via-purple-300 to-purple-200 p-6 pt-20">
      <Navbar token={token} handleLogout={handleLogout} />
      <div className="mt-8 flex justify-around">
        {/* Calendar Component */}
        <div className="w-1/3">
          <h2 className="text-4xl font-bold text-white mb-6 text-center">Calendar</h2>
          <div className="bg-white p-6 rounded-lg shadow-md space-y-4">
            {/* Replace with your calendar component */}
            {/* Let's simulate the calendar as an example */}
            <div
              className="calendar-day"
              onClick={() => handleDateClick('07/11/2024')}
              style={{ padding: '10px', border: '1px solid #ccc', cursor: 'pointer' }}
            >
              7th November 2024
            </div>
            <div
              className="calendar-day"
              onClick={() => handleDateClick('08/11/2024')}
              style={{ padding: '10px', border: '1px solid #ccc', cursor: 'pointer' }}
            >
              8th November 2024
            </div>
            {/* Add other dates as needed */}
          </div>
        </div>

        {/* Task List */}
        <div className="w-1/2">
          <h3 className="text-4xl font-semibold text-white mb-4 text-center">
            Tasks for {clickedDate || 'Selected Date'}
          </h3>
          <ul className="space-y-4 max-h-[62vh] overflow-y-auto">
            {filteredTasks.length > 0 ? (
              filteredTasks.map(task => (
                <li key={task._id} className="bg-white p-4 rounded-lg shadow-md flex justify-between items-center">
                  <div>
                    <h4 className="text-lg font-semibold text-purple-800">{task.name}</h4>
                    <p className="text-sm text-gray-500">Due: {formatDeadline(task.deadline)}</p>
                  </div>
                  <button
                    disabled={task.completed}
                    className={`py-1 px-3 rounded-md text-white ${task.completed ? 'bg-gray-400 cursor-not-allowed' : 'bg-purple-600 hover:bg-purple-800'}`}
                  >
                    {task.completed ? 'Completed' : 'Complete'}
                  </button>
                </li>
              ))
            ) : (
              <p className="text-center text-gray-500">No tasks for this date</p>
            )}
          </ul>
        </div>
      </div>
    </div>
  );
};

export default Timetable;
